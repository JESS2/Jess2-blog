{"expireTime":9007200826310110000,"key":"transformer-remark-markdown-html-ast-d4e0128d37e147c2f69b0c538b11f0ec-gatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"클로저","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":4,"offset":4}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":4,"offset":4}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"자유 변수를 가리키는 함수이다. 클로저 안에 정의된 함수는 만들어진 환경을 ‘기억한다’.","position":{"start":{"line":3,"column":3,"offset":7},"end":{"line":3,"column":52,"offset":56}}}],"position":{"start":{"line":3,"column":1,"offset":5},"end":{"line":3,"column":52,"offset":56}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"예를 들어, 어떤 함수의 리턴 값이 함수일 때, 이 리턴된 함수가 클로저이다. 이 리턴된 함수는 외부 함수의 환경을 기억한다.","position":{"start":{"line":4,"column":3,"offset":59},"end":{"line":4,"column":73,"offset":129}}}],"position":{"start":{"line":4,"column":1,"offset":57},"end":{"line":4,"column":73,"offset":129}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"반복문에서도 클로저를 사용할 수 있는데, 반복문 안에 익명함수를 만들고 또 그 안에 익명함수를 넣어 사용한다.","position":{"start":{"line":5,"column":3,"offset":132},"end":{"line":5,"column":64,"offset":193}}}],"position":{"start":{"line":5,"column":1,"offset":130},"end":{"line":5,"column":64,"offset":193}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3,"column":1,"offset":5},"end":{"line":5,"column":64,"offset":193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"클로저는 유효범위(Scope)를 기억하는 함수이다. 따라서 내부함수가 외부함수의 지역변수를 기억하여 접근할 수 있다.","position":{"start":{"line":7,"column":1,"offset":195},"end":{"line":7,"column":66,"offset":260}}}],"position":{"start":{"line":7,"column":1,"offset":195},"end":{"line":7,"column":66,"offset":260}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"외부함수의 실행이 끝나서 외부함수가 소멸된 이후에도 내부함수는 외부함수의 지역변수에 접근할 수 있다.","position":{"start":{"line":9,"column":1,"offset":262},"end":{"line":9,"column":57,"offset":318}}}],"position":{"start":{"line":9,"column":1,"offset":262},"end":{"line":9,"column":57,"offset":318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"즉 클로저란 내부함수가 외부함수의 지역변수에 접근할 수 있고 외부함수는 외부함수의 지역변수를 사용하는 내부함수가 소멸될 때까지 소멸되지 않는 특성을 의미한다.","position":{"start":{"line":11,"column":1,"offset":320},"end":{"line":11,"column":89,"offset":408}}}],"position":{"start":{"line":11,"column":1,"offset":320},"end":{"line":11,"column":89,"offset":408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"scope"},"children":[{"type":"element","tagName":"a","properties":{"href":"#scope","aria-label":"scope permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Scope","position":{"start":{"line":13,"column":5,"offset":414},"end":{"line":13,"column":10,"offset":419}}}],"position":{"start":{"line":13,"column":1,"offset":410},"end":{"line":13,"column":10,"offset":419}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"클로저에 대해 더 자세히 알아보기 전에 유효범위에 대해 알아보자.","position":{"start":{"line":14,"column":1,"offset":420},"end":{"line":14,"column":37,"offset":456}}}],"position":{"start":{"line":14,"column":1,"offset":420},"end":{"line":14,"column":37,"offset":456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"변수는 크게 지역변수와 전역변수가 있다.","position":{"start":{"line":16,"column":1,"offset":458},"end":{"line":16,"column":23,"offset":480}}}],"position":{"start":{"line":16,"column":1,"offset":458},"end":{"line":16,"column":23,"offset":480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"지역변수는 함수 내에서만 생명을 가지고 함수가 종료되면 함수 내의 변수는 사라진다.","position":{"start":{"line":18,"column":1,"offset":482},"end":{"line":18,"column":47,"offset":528}}}],"position":{"start":{"line":18,"column":1,"offset":482},"end":{"line":18,"column":47,"offset":528}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이렇게 함수 단위의 지역으로 변수의 유효 범위가 정해지는 것을 ","position":{"start":{"line":20,"column":1,"offset":530},"end":{"line":20,"column":36,"offset":565}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"유효 범위(scope)","position":{"start":{"line":20,"column":38,"offset":567},"end":{"line":20,"column":50,"offset":579}}}],"position":{"start":{"line":20,"column":36,"offset":565},"end":{"line":20,"column":52,"offset":581}}},{"type":"text","value":"라고 한다.","position":{"start":{"line":20,"column":52,"offset":581},"end":{"line":20,"column":58,"offset":587}}}],"position":{"start":{"line":20,"column":1,"offset":530},"end":{"line":20,"column":58,"offset":587}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> global <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 전역변수</span>\n \n<span class=\"token keyword\">function</span> <span class=\"token function\">func</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> local <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 지역변수</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 출력결과 > 20</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>local<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 출력결과 > 10</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 출력결과 > 20</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>local<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ERROR!</span></code></pre></div>","position":{"start":{"line":22,"column":1,"offset":589},"end":{"line":34,"column":4,"offset":823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"함수 밖의 전역 변수 ","position":{"start":{"line":35,"column":1,"offset":824},"end":{"line":35,"column":13,"offset":836}}},{"type":"raw","value":"<code class=\"language-text\">global</code>","position":{"start":{"line":35,"column":13,"offset":836},"end":{"line":35,"column":21,"offset":844}}},{"type":"text","value":"은 코드 전체에서 값이 유효하지만 함수 내의 지역 변수인 ","position":{"start":{"line":35,"column":21,"offset":844},"end":{"line":35,"column":53,"offset":876}}},{"type":"raw","value":"<code class=\"language-text\">local</code>","position":{"start":{"line":35,"column":53,"offset":876},"end":{"line":35,"column":60,"offset":883}}},{"type":"text","value":"은 함수 밖에서 사용할 수 없다.","position":{"start":{"line":35,"column":60,"offset":883},"end":{"line":35,"column":78,"offset":901}}}],"position":{"start":{"line":35,"column":1,"offset":824},"end":{"line":35,"column":78,"offset":901}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"함수가 종료되면 지역 변수의 유효범위가 종료되기 때문이다.","position":{"start":{"line":37,"column":1,"offset":903},"end":{"line":37,"column":33,"offset":935}}}],"position":{"start":{"line":37,"column":1,"offset":903},"end":{"line":37,"column":33,"offset":935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그러나 함수가 종료되어도 변수를 유지시킬 수 있는데, 그 방법이 바로 ","position":{"start":{"line":39,"column":1,"offset":937},"end":{"line":39,"column":40,"offset":976}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"클로저","position":{"start":{"line":39,"column":42,"offset":978},"end":{"line":39,"column":45,"offset":981}}}],"position":{"start":{"line":39,"column":40,"offset":976},"end":{"line":39,"column":47,"offset":983}}},{"type":"text","value":"이다.","position":{"start":{"line":39,"column":47,"offset":983},"end":{"line":39,"column":50,"offset":986}}}],"position":{"start":{"line":39,"column":1,"offset":937},"end":{"line":39,"column":50,"offset":986}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">outFunc</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// 내부 함수(클로저)</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">inFunc</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">return</span> inFunc<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token keyword\">var</span> test <span class=\"token operator\">=</span> <span class=\"token function\">outFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></code></pre></div>","position":{"start":{"line":41,"column":1,"offset":988},"end":{"line":57,"column":4,"offset":1229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">var test = outFunc();</code>","position":{"start":{"line":58,"column":1,"offset":1230},"end":{"line":58,"column":24,"offset":1253}}},{"type":"text","value":" : 클로저 함수를 리턴받아 새로운 변수에 대입하면 ","position":{"start":{"line":58,"column":24,"offset":1253},"end":{"line":58,"column":53,"offset":1282}}},{"type":"raw","value":"<code class=\"language-text\">outFunc()</code>","position":{"start":{"line":58,"column":53,"offset":1282},"end":{"line":58,"column":64,"offset":1293}}},{"type":"text","value":"가 종료된 후에도 해당 함수의 지역변수 값을 계속 참조하고 변수 값이 생존하게 된다.","position":{"start":{"line":58,"column":64,"offset":1293},"end":{"line":58,"column":111,"offset":1340}}}],"position":{"start":{"line":58,"column":1,"offset":1230},"end":{"line":58,"column":111,"offset":1340}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">outer</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'hello world'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \ninner <span class=\"token operator\">=</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":60,"column":1,"offset":1342},"end":{"line":70,"column":4,"offset":1482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"8행에서 ","position":{"start":{"line":71,"column":1,"offset":1483},"end":{"line":71,"column":6,"offset":1488}}},{"type":"raw","value":"<code class=\"language-text\">outer</code>","position":{"start":{"line":71,"column":6,"offset":1488},"end":{"line":71,"column":13,"offset":1495}}},{"type":"text","value":"함수가 호출되었고, 그 결과가 ","position":{"start":{"line":71,"column":13,"offset":1495},"end":{"line":71,"column":30,"offset":1512}}},{"type":"raw","value":"<code class=\"language-text\">inner</code>","position":{"start":{"line":71,"column":30,"offset":1512},"end":{"line":71,"column":37,"offset":1519}}},{"type":"text","value":"변수에 담겼다. ","position":{"start":{"line":71,"column":37,"offset":1519},"end":{"line":71,"column":46,"offset":1528}}}],"position":{"start":{"line":71,"column":1,"offset":1483},"end":{"line":71,"column":46,"offset":1528}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그리고 9행으로 넘어오면 ","position":{"start":{"line":73,"column":1,"offset":1530},"end":{"line":73,"column":15,"offset":1544}}},{"type":"raw","value":"<code class=\"language-text\">outer</code>","position":{"start":{"line":73,"column":15,"offset":1544},"end":{"line":73,"column":22,"offset":1551}}},{"type":"text","value":"함수는 종료되었기 때문에 이 ","position":{"start":{"line":73,"column":22,"offset":1551},"end":{"line":73,"column":38,"offset":1567}}},{"type":"raw","value":"<code class=\"language-text\">outer</code>","position":{"start":{"line":73,"column":38,"offset":1567},"end":{"line":73,"column":45,"offset":1574}}},{"type":"text","value":"함수의 지역변수인 ","position":{"start":{"line":73,"column":45,"offset":1574},"end":{"line":73,"column":55,"offset":1584}}},{"type":"raw","value":"<code class=\"language-text\">title</code>","position":{"start":{"line":73,"column":55,"offset":1584},"end":{"line":73,"column":62,"offset":1591}}},{"type":"text","value":"은 소멸되는 것이 자연스럽다.","position":{"start":{"line":73,"column":62,"offset":1591},"end":{"line":73,"column":78,"offset":1607}}}],"position":{"start":{"line":73,"column":1,"offset":1530},"end":{"line":73,"column":78,"offset":1607}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"하지만 9행에서 ","position":{"start":{"line":75,"column":1,"offset":1609},"end":{"line":75,"column":10,"offset":1618}}},{"type":"raw","value":"<code class=\"language-text\">inner</code>","position":{"start":{"line":75,"column":10,"offset":1618},"end":{"line":75,"column":17,"offset":1625}}},{"type":"text","value":"함수를 호출했을 때, ","position":{"start":{"line":75,"column":17,"offset":1625},"end":{"line":75,"column":29,"offset":1637}}},{"type":"raw","value":"<code class=\"language-text\">hello world</code>","position":{"start":{"line":75,"column":29,"offset":1637},"end":{"line":75,"column":42,"offset":1650}}},{"type":"text","value":"가 잘 출력된다. 이것은 외부함수의 지역변수인 ","position":{"start":{"line":75,"column":42,"offset":1650},"end":{"line":75,"column":68,"offset":1676}}},{"type":"raw","value":"<code class=\"language-text\">title</code>","position":{"start":{"line":75,"column":68,"offset":1676},"end":{"line":75,"column":75,"offset":1683}}},{"type":"text","value":"이 소멸되지 않았다는 것이다.","position":{"start":{"line":75,"column":75,"offset":1683},"end":{"line":75,"column":91,"offset":1699}}}],"position":{"start":{"line":75,"column":1,"offset":1609},"end":{"line":75,"column":91,"offset":1699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이처럼 내부함수가 외부함수의 지역변수에 접근할 수 있고, 외부함수는 외부함수의 지역변수를 사용하는 내부함수가 소멸될 때까지 소멸되지 않는다.","position":{"start":{"line":77,"column":1,"offset":1701},"end":{"line":77,"column":79,"offset":1779}}}],"position":{"start":{"line":77,"column":1,"offset":1701},"end":{"line":77,"column":79,"offset":1779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"for문과-클로저"},"children":[{"type":"element","tagName":"a","properties":{"href":"#for%EB%AC%B8%EA%B3%BC-%ED%81%B4%EB%A1%9C%EC%A0%80","aria-label":"for문과 클로저 permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"for문과 클로저","position":{"start":{"line":79,"column":5,"offset":1785},"end":{"line":79,"column":14,"offset":1794}}}],"position":{"start":{"line":79,"column":1,"offset":1781},"end":{"line":79,"column":14,"offset":1794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"for문으로 클로저를 생성할 경우 실수가 빈번하게 발생한다. 다음 코드를 보자.","position":{"start":{"line":80,"column":1,"offset":1795},"end":{"line":80,"column":45,"offset":1839}}}],"position":{"start":{"line":80,"column":1,"offset":1795},"end":{"line":80,"column":45,"offset":1839}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></code></pre></div>","position":{"start":{"line":82,"column":1,"offset":1841},"end":{"line":94,"column":4,"offset":2024}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"위 코드는 3만 세 번 출력한다. 클로저를 사용하려면 아래의 코드처럼 수정하자.","position":{"start":{"line":95,"column":1,"offset":2025},"end":{"line":95,"column":45,"offset":2069}}}],"position":{"start":{"line":95,"column":1,"offset":2025},"end":{"line":95,"column":45,"offset":2069}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    arr<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 익명 함수</span>\n<span class=\"token punctuation\">}</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span></code></pre></div>","position":{"start":{"line":97,"column":1,"offset":2071},"end":{"line":111,"column":4,"offset":2307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"위 코드는 정상적으로 0, 1, 2를 출력한다. for문 안의 처리문을 즉시 실행 익명 함수로 분리시키고 클로저가 for문의 i가 아닌 익명함수의 index변수를 참조하도록 한다.","position":{"start":{"line":112,"column":1,"offset":2308},"end":{"line":112,"column":101,"offset":2408}}}],"position":{"start":{"line":112,"column":1,"offset":2308},"end":{"line":112,"column":101,"offset":2408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"참고로 ECMAScript 2015 (ES6)의 새로운 변수 선언문인 let 키워드로 변수를 선언하면 변수의 스코프가 블록 단위(기존 JS는 함수 단위이다.)로 엄격해지므로 이러한 문제가 발생하지 않는다. 아래의 코드를 보자.","position":{"start":{"line":114,"column":1,"offset":2410},"end":{"line":114,"column":127,"offset":2536}}}],"position":{"start":{"line":114,"column":1,"offset":2410},"end":{"line":114,"column":127,"offset":2536}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span></code></pre></div>","position":{"start":{"line":116,"column":1,"offset":2538},"end":{"line":128,"column":4,"offset":2722}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":129,"column":1,"offset":2723}}}}