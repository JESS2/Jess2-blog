{"expireTime":9007200826310544000,"key":"transformer-remark-markdown-ast-888c21c0a06f80e784bf2c2e63ced087-gatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"클로저","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":4,"offset":4},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":4,"offset":4},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"자유 변수를 가리키는 함수이다. 클로저 안에 정의된 함수는 만들어진 환경을 ‘기억한다’.","position":{"start":{"line":3,"column":3,"offset":7},"end":{"line":3,"column":52,"offset":56},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":7},"end":{"line":3,"column":52,"offset":56},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":5},"end":{"line":3,"column":52,"offset":56},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"예를 들어, 어떤 함수의 리턴 값이 함수일 때, 이 리턴된 함수가 클로저이다. 이 리턴된 함수는 외부 함수의 환경을 기억한다.","position":{"start":{"line":4,"column":3,"offset":59},"end":{"line":4,"column":73,"offset":129},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":59},"end":{"line":4,"column":73,"offset":129},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":57},"end":{"line":4,"column":73,"offset":129},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"반복문에서도 클로저를 사용할 수 있는데, 반복문 안에 익명함수를 만들고 또 그 안에 익명함수를 넣어 사용한다.","position":{"start":{"line":5,"column":3,"offset":132},"end":{"line":5,"column":64,"offset":193},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":132},"end":{"line":5,"column":64,"offset":193},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":130},"end":{"line":5,"column":64,"offset":193},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":5},"end":{"line":5,"column":64,"offset":193},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"클로저는 유효범위(Scope)를 기억하는 함수이다. 따라서 내부함수가 외부함수의 지역변수를 기억하여 접근할 수 있다.","position":{"start":{"line":7,"column":1,"offset":195},"end":{"line":7,"column":66,"offset":260},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":195},"end":{"line":7,"column":66,"offset":260},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"외부함수의 실행이 끝나서 외부함수가 소멸된 이후에도 내부함수는 외부함수의 지역변수에 접근할 수 있다.","position":{"start":{"line":9,"column":1,"offset":262},"end":{"line":9,"column":57,"offset":318},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":262},"end":{"line":9,"column":57,"offset":318},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"즉 클로저란 내부함수가 외부함수의 지역변수에 접근할 수 있고 외부함수는 외부함수의 지역변수를 사용하는 내부함수가 소멸될 때까지 소멸되지 않는 특성을 의미한다.","position":{"start":{"line":11,"column":1,"offset":320},"end":{"line":11,"column":89,"offset":408},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":320},"end":{"line":11,"column":89,"offset":408},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"클로저에 대해 알아보기 전에 Scope에 대해 알아보자.","position":{"start":{"line":13,"column":1,"offset":410},"end":{"line":13,"column":32,"offset":441},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":410},"end":{"line":13,"column":32,"offset":441},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#scope유효-범위","title":null,"data":{"hProperties":{"aria-label":"scope유효 범위 permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Scope(유효 범위)","position":{"start":{"line":15,"column":5,"offset":447},"end":{"line":15,"column":17,"offset":459},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":443},"end":{"line":15,"column":17,"offset":459},"indent":[]},"data":{"id":"scope유효-범위","htmlAttributes":{"id":"scope유효-범위"},"hProperties":{"id":"scope유효-범위"}}},{"type":"paragraph","children":[{"type":"text","value":"Scope는 변수의 ","position":{"start":{"line":17,"column":1,"offset":461},"end":{"line":17,"column":12,"offset":472},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"유효 범위","position":{"start":{"line":17,"column":14,"offset":474},"end":{"line":17,"column":19,"offset":479},"indent":[]}}],"position":{"start":{"line":17,"column":12,"offset":472},"end":{"line":17,"column":21,"offset":481},"indent":[]}},{"type":"text","value":"를 뜻한다.","position":{"start":{"line":17,"column":21,"offset":481},"end":{"line":17,"column":27,"offset":487},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":461},"end":{"line":17,"column":27,"offset":487},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"기본적으로 ","position":{"start":{"line":19,"column":1,"offset":489},"end":{"line":19,"column":7,"offset":495},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">var</code>","position":{"start":{"line":19,"column":7,"offset":495},"end":{"line":19,"column":12,"offset":500},"indent":[]}},{"type":"text","value":"로 선언한 변수는 이 변수를 포함하고 있는 ","position":{"start":{"line":19,"column":12,"offset":500},"end":{"line":19,"column":36,"offset":524},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"함수","position":{"start":{"line":19,"column":38,"offset":526},"end":{"line":19,"column":40,"offset":528},"indent":[]}}],"position":{"start":{"line":19,"column":36,"offset":524},"end":{"line":19,"column":42,"offset":530},"indent":[]}},{"type":"text","value":" 내 어디서든 유효하다. 하지만 ","position":{"start":{"line":19,"column":42,"offset":530},"end":{"line":19,"column":60,"offset":548},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">let</code>","position":{"start":{"line":19,"column":60,"offset":548},"end":{"line":19,"column":65,"offset":553},"indent":[]}},{"type":"text","value":"으로 선언한 변수는 이 변수를 포함하고 있는 ","position":{"start":{"line":19,"column":65,"offset":553},"end":{"line":19,"column":90,"offset":578},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"블록","position":{"start":{"line":19,"column":92,"offset":580},"end":{"line":19,"column":94,"offset":582},"indent":[]}}],"position":{"start":{"line":19,"column":90,"offset":578},"end":{"line":19,"column":96,"offset":584},"indent":[]}},{"type":"text","value":" 내에서만 유효하다.","position":{"start":{"line":19,"column":96,"offset":584},"end":{"line":19,"column":107,"offset":595},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":489},"end":{"line":19,"column":107,"offset":595},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Scope에 대한 더 자세한 설명은 ","position":{"start":{"line":21,"column":1,"offset":597},"end":{"line":21,"column":21,"offset":617},"indent":[]}},{"type":"link","title":null,"url":"https://jess2.xyz/JavaScript/var,-let,-const-%EB%B9%84%EA%B5%90/","children":[{"type":"text","value":"여기","position":{"start":{"line":21,"column":22,"offset":618},"end":{"line":21,"column":24,"offset":620},"indent":[]}}],"position":{"start":{"line":21,"column":21,"offset":617},"end":{"line":21,"column":91,"offset":687},"indent":[]}},{"type":"text","value":"에서 확인할 수 있다.","position":{"start":{"line":21,"column":91,"offset":687},"end":{"line":21,"column":103,"offset":699},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":597},"end":{"line":21,"column":103,"offset":699},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> global <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 전역변수</span>\n \n<span class=\"token keyword\">function</span> <span class=\"token function\">func</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> local <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 지역변수</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 출력결과 > 20</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>local<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 출력결과 > 10</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>global<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 출력결과 > 20</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>local<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ERROR!</span></code></pre></div>","position":{"start":{"line":23,"column":1,"offset":701},"end":{"line":35,"column":4,"offset":935},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"함수 밖의 전역 변수 ","position":{"start":{"line":36,"column":1,"offset":936},"end":{"line":36,"column":13,"offset":948},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">global</code>","position":{"start":{"line":36,"column":13,"offset":948},"end":{"line":36,"column":21,"offset":956},"indent":[]}},{"type":"text","value":"은 코드 전체에서 값이 유효하지만 함수 내의 지역 변수인 ","position":{"start":{"line":36,"column":21,"offset":956},"end":{"line":36,"column":53,"offset":988},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">local</code>","position":{"start":{"line":36,"column":53,"offset":988},"end":{"line":36,"column":60,"offset":995},"indent":[]}},{"type":"text","value":"은 함수 밖에서 사용할 수 없다.","position":{"start":{"line":36,"column":60,"offset":995},"end":{"line":36,"column":78,"offset":1013},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":936},"end":{"line":36,"column":78,"offset":1013},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"함수가 종료되면 지역 변수의 Scope가 종료되기 때문이다.","position":{"start":{"line":38,"column":1,"offset":1015},"end":{"line":38,"column":34,"offset":1048},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1015},"end":{"line":38,"column":34,"offset":1048},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"그러나 함수가 종료되어도 변수를 유지시킬 수 있는데, 그 방법이 바로 ","position":{"start":{"line":40,"column":1,"offset":1050},"end":{"line":40,"column":40,"offset":1089},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"클로저","position":{"start":{"line":40,"column":42,"offset":1091},"end":{"line":40,"column":45,"offset":1094},"indent":[]}}],"position":{"start":{"line":40,"column":40,"offset":1089},"end":{"line":40,"column":47,"offset":1096},"indent":[]}},{"type":"text","value":"이다.","position":{"start":{"line":40,"column":47,"offset":1096},"end":{"line":40,"column":50,"offset":1099},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1050},"end":{"line":40,"column":50,"offset":1099},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">outFunc</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">// 내부 함수(클로저)</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">inFunc</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">return</span> inFunc<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n \n<span class=\"token keyword\">var</span> test <span class=\"token operator\">=</span> <span class=\"token function\">outFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></code></pre></div>","position":{"start":{"line":42,"column":1,"offset":1101},"end":{"line":58,"column":4,"offset":1342},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">var test = outFunc();</code>","position":{"start":{"line":59,"column":1,"offset":1343},"end":{"line":59,"column":24,"offset":1366},"indent":[]}},{"type":"text","value":" : 클로저 함수를 리턴받아 새로운 변수에 대입하면 ","position":{"start":{"line":59,"column":24,"offset":1366},"end":{"line":59,"column":53,"offset":1395},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">outFunc()</code>","position":{"start":{"line":59,"column":53,"offset":1395},"end":{"line":59,"column":64,"offset":1406},"indent":[]}},{"type":"text","value":"가 종료된 후에도 해당 함수의 지역변수 값을 계속 참조하고 변수 값이 생존하게 된다.","position":{"start":{"line":59,"column":64,"offset":1406},"end":{"line":59,"column":111,"offset":1453},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1343},"end":{"line":59,"column":111,"offset":1453},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">outer</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'hello world'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \ninner <span class=\"token operator\">=</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">inner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":61,"column":1,"offset":1455},"end":{"line":71,"column":4,"offset":1595},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"8행에서 ","position":{"start":{"line":72,"column":1,"offset":1596},"end":{"line":72,"column":6,"offset":1601},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">outer</code>","position":{"start":{"line":72,"column":6,"offset":1601},"end":{"line":72,"column":13,"offset":1608},"indent":[]}},{"type":"text","value":"함수가 호출되었고, 그 결과가 ","position":{"start":{"line":72,"column":13,"offset":1608},"end":{"line":72,"column":30,"offset":1625},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">inner</code>","position":{"start":{"line":72,"column":30,"offset":1625},"end":{"line":72,"column":37,"offset":1632},"indent":[]}},{"type":"text","value":"변수에 담겼다. ","position":{"start":{"line":72,"column":37,"offset":1632},"end":{"line":72,"column":46,"offset":1641},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1596},"end":{"line":72,"column":46,"offset":1641},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"그리고 9행으로 넘어오면 ","position":{"start":{"line":74,"column":1,"offset":1643},"end":{"line":74,"column":15,"offset":1657},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">outer</code>","position":{"start":{"line":74,"column":15,"offset":1657},"end":{"line":74,"column":22,"offset":1664},"indent":[]}},{"type":"text","value":"함수는 종료되었기 때문에 이 ","position":{"start":{"line":74,"column":22,"offset":1664},"end":{"line":74,"column":38,"offset":1680},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">outer</code>","position":{"start":{"line":74,"column":38,"offset":1680},"end":{"line":74,"column":45,"offset":1687},"indent":[]}},{"type":"text","value":"함수의 지역변수인 ","position":{"start":{"line":74,"column":45,"offset":1687},"end":{"line":74,"column":55,"offset":1697},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">title</code>","position":{"start":{"line":74,"column":55,"offset":1697},"end":{"line":74,"column":62,"offset":1704},"indent":[]}},{"type":"text","value":"은 소멸되는 것이 자연스럽다.","position":{"start":{"line":74,"column":62,"offset":1704},"end":{"line":74,"column":78,"offset":1720},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1643},"end":{"line":74,"column":78,"offset":1720},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"하지만 9행에서 ","position":{"start":{"line":76,"column":1,"offset":1722},"end":{"line":76,"column":10,"offset":1731},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">inner</code>","position":{"start":{"line":76,"column":10,"offset":1731},"end":{"line":76,"column":17,"offset":1738},"indent":[]}},{"type":"text","value":"함수를 호출했을 때, ","position":{"start":{"line":76,"column":17,"offset":1738},"end":{"line":76,"column":29,"offset":1750},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">hello world</code>","position":{"start":{"line":76,"column":29,"offset":1750},"end":{"line":76,"column":42,"offset":1763},"indent":[]}},{"type":"text","value":"가 잘 출력된다. 이것은 외부함수의 지역변수인 ","position":{"start":{"line":76,"column":42,"offset":1763},"end":{"line":76,"column":68,"offset":1789},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">title</code>","position":{"start":{"line":76,"column":68,"offset":1789},"end":{"line":76,"column":75,"offset":1796},"indent":[]}},{"type":"text","value":"이 소멸되지 않았다는 것이다.","position":{"start":{"line":76,"column":75,"offset":1796},"end":{"line":76,"column":91,"offset":1812},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1722},"end":{"line":76,"column":91,"offset":1812},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이처럼 내부함수가 외부함수의 지역변수에 접근할 수 있고, 외부함수는 외부함수의 지역변수를 사용하는 내부함수가 소멸될 때까지 소멸되지 않는다.","position":{"start":{"line":78,"column":1,"offset":1814},"end":{"line":78,"column":79,"offset":1892},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1814},"end":{"line":78,"column":79,"offset":1892},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#for문과-클로저","title":null,"data":{"hProperties":{"aria-label":"for문과 클로저 permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"for문과 클로저","position":{"start":{"line":80,"column":5,"offset":1898},"end":{"line":80,"column":14,"offset":1907},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1894},"end":{"line":80,"column":14,"offset":1907},"indent":[]},"data":{"id":"for문과-클로저","htmlAttributes":{"id":"for문과-클로저"},"hProperties":{"id":"for문과-클로저"}}},{"type":"paragraph","children":[{"type":"text","value":"for문으로 클로저를 생성할 경우 실수가 빈번하게 발생한다. 다음 코드를 보자.","position":{"start":{"line":81,"column":1,"offset":1908},"end":{"line":81,"column":45,"offset":1952},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1908},"end":{"line":81,"column":45,"offset":1952},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span></code></pre></div>","position":{"start":{"line":83,"column":1,"offset":1954},"end":{"line":95,"column":4,"offset":2137},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"위 코드는 3만 세 번 출력한다. 클로저를 사용하려면 아래의 코드처럼 수정하자.","position":{"start":{"line":96,"column":1,"offset":2138},"end":{"line":96,"column":45,"offset":2182},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2138},"end":{"line":96,"column":45,"offset":2182},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    arr<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> index<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 익명 함수</span>\n<span class=\"token punctuation\">}</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span></code></pre></div>","position":{"start":{"line":98,"column":1,"offset":2184},"end":{"line":112,"column":4,"offset":2420},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"위 코드는 정상적으로 0, 1, 2를 출력한다. for문 안의 처리문을 즉시 실행 익명 함수로 분리시키고 클로저가 for문의 i가 아닌 익명함수의 index변수를 참조하도록 한다.","position":{"start":{"line":113,"column":1,"offset":2421},"end":{"line":113,"column":101,"offset":2521},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":2421},"end":{"line":113,"column":101,"offset":2521},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"참고로 ECMAScript 2015 (ES6)의 새로운 변수 선언문인 let 키워드로 변수를 선언하면 변수의 스코프가 블록 단위(기존 JS는 함수 단위이다.)로 엄격해지므로 이러한 문제가 발생하지 않는다. 아래의 코드를 보자.","position":{"start":{"line":115,"column":1,"offset":2523},"end":{"line":115,"column":127,"offset":2649},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":2523},"end":{"line":115,"column":127,"offset":2649},"indent":[]}},{"type":"html","lang":"js","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span></code></pre></div>","position":{"start":{"line":117,"column":1,"offset":2651},"end":{"line":129,"column":4,"offset":2835},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":130,"column":1,"offset":2836}}}}