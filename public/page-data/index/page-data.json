{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Jess2.xyz","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"HTML에서 JS를 포함할 때 어떻게 포함하는 것이 더 효율적일까? 방법 1 - head 태그 안에 넣기  먼저 사용자가 HTML 파일을 다운로드 받았을 때 브라우저가 한 줄 한 줄씩 분석한다. 이걸 CSS와 병합해서 DOM 요소로 변환한다. HTML 태그를 한 줄 씩 파싱하다가  태그가 보이면 JS 를 다운로드 받아야 되네라고 이해하게 된다.\n그래서 H…","fields":{"slug":"/JavaScript/async-defer/"},"frontmatter":{"date":"February 28, 2021","title":"[JavaScript] HTML에 JS를 포함하는 방법 - async / defer","category":"javascript"}}},{"node":{"excerpt":"자바스크립트의 역사 1993 NCSA - Mosaic Web Browser 1994 Netscape - Netscape Navigator HTML/CSS로 간단하게 정적 웹 페이지를 만들 수 있었다. 시장 점유율 80% 이후 동적 웹사이트를 만들기 위한 고민 → Scripting 언어를 추가하자! Scheme Scriptint 언어를 조금 더 Java 언…","fields":{"slug":"/JavaScript/js-history/"},"frontmatter":{"date":"February 28, 2021","title":"[JavaScript] 자바스크립트의 역사와 현재 그리고 미래","category":"javascript"}}},{"node":{"excerpt":"이 글은 이재승님의 실전 리액트 프로그래밍 강좌를 듣고 공부하면서 필요한 부분을 정리한 글이다. 기존에 작성한 포스트들(1, 2, 3, 4) 을 하나의 포스트로 보기 위해 합쳤다.   0. Index 리액트란 무엇인가 create-react-app (CRA) 으로 시작하기 CSS 작성 방법 결정하기 단일 페이지 어플리케이션 (SPA) 속성값과 상태값 컴포…","fields":{"slug":"/react/react-tip-0/"},"frontmatter":{"date":"January 28, 2021","title":"[React] 실전 리액트 프로그래밍 내용 정리 1~4","category":"react"}}},{"node":{"excerpt":"이 글은 이재승님의 실전 리액트 프로그래밍 강좌를 듣고 공부하면서 필요한 부분을 정리한 글이다. 0. Index Context API ref 속성값으로 자식 요소에 접근하기 리액트 내장 훅 1. Context API 상위 컴포넌트에서 하위 컴포넌트로 데이터를 전달할 때 속성값(Props)을 사용할 수 있다.\n가까운 거리에 있는 몇 개의 컴포넌트로 전달할 …","fields":{"slug":"/react/react-tip-4/"},"frontmatter":{"date":"January 24, 2021","title":"[React] 실전 리액트 프로그래밍 내용 정리 4","category":"react"}}},{"node":{"excerpt":"이 글은 이재승님의 실전 리액트 프로그래밍 강좌를 듣고 공부하면서 필요한 부분을 정리한 글이다. 0. Index 리액트 훅 훅 직접 만들기 훅 사용 시 지켜야할 규칙 1. 리액트 훅 1-1. 리액트 훅(Hook)이란 컴포넌트에 기능을 추가할 때 사용하는 함수 예를 들면, 컴포넌트에 상태값을 추가하거나 자식 요소에 접근하는 등의 기능을 추가하고 싶을 때 훅…","fields":{"slug":"/react/react-tip-3/"},"frontmatter":{"date":"January 23, 2021","title":"[React] 실전 리액트 프로그래밍 내용 정리 3","category":"react"}}},{"node":{"excerpt":"이 글은 이재승님의 실전 리액트 프로그래밍 강좌를 듣고 공부하면서 필요한 부분을 정리한 글이다. 0. Index 속성값과 상태값 컴포넌트 함수의 반환값 리액트 요소와 가상돔 1. 컴포넌트의 속성과 상태값 1-1. 속성값(Props)과 상태값(State) 리액트 컴포넌트에서는 UI 데이터를 속성값이나 상태값으로 관리를 해야 한다. 상태값으로 관리되지 않은 …","fields":{"slug":"/react/react-tip-2/"},"frontmatter":{"date":"January 23, 2021","title":"[React] 실전 리액트 프로그래밍 내용 정리 2","category":"react"}}},{"node":{"excerpt":"이 글은 이재승님의 실전 리액트 프로그래밍 강좌를 듣고 공부하면서 필요한 부분을 정리한 글이다. 0. Index 리액트란 무엇인가 create-react-app (CRA) 으로 시작하기 CSS 작성 방법 결정하기 단일 페이지 어플리케이션 (SPA) 1. 리액트란 무엇인가 1-1. 리액트 소개 리액트는 페이스북에서 개발하고 관리하는 UI 라이브러리 앵귤러가…","fields":{"slug":"/react/react-tip-1/"},"frontmatter":{"date":"January 17, 2021","title":"[React] 실전 리액트 프로그래밍 내용 정리 1","category":"react"}}},{"node":{"excerpt":"이 글은 장기효(캡틴판교)님의 Vue.js 끝장내기 - 실무에 필요한 모든 것 강좌를 듣고 공부하면서 필요한 부분을 정리한 글이다. 0. Index 프로젝트 생성 및 환경 구성 Router & 컴포넌트 설계 Axios 통신 env 설정 네트워크 에러 처리 Validation 상태 관리와 Store Token을 이용한 API 인증 브라우저 저장소를 이용한 …","fields":{"slug":"/vue/vue-tip/"},"frontmatter":{"date":"January 14, 2021","title":"[Vue.js] Vue.js 실무 프로젝트에 적용하면 좋은 내용 정리","category":"vue"}}},{"node":{"excerpt":"1. 프로젝트를 로컬 환경에서 실행시키기 주의: 프로젝트 실행 명령어는 프로젝트 설정에 따라 다르다. 로컬 환경의 프로젝트가 아닌 이미 배포되어 있는 웹페이지의 개발자도구를 열고 싶다면 이 단계는 건너 뛴다.  2. iPhone 브라우저 앱에서 PC 로컬 환경에서 실행되고 있는 웹 사이트에 엑세스하기 2-1. mac System Preferences 앱 …","fields":{"slug":"/etc./mobile-safari-inspector/"},"frontmatter":{"date":"January 08, 2021","title":"[etc.] 모바일 Safari 브라우저에서 개발자도구 열기","category":"etc."}}},{"node":{"excerpt":"BEM : Block__Element—Modifier Block : 독립적인 형태이자 기능의 단위 Element : 의존적인 형태, 자신이 속한 블럭 내에서만 의미를 가짐 Modifier : 블럭이나 엘리먼트의 속성, 생긴 게 조금 다르게 생기거나 다르게 동작하는 블럭이나 엘리먼트를 만들 때 사용 자신이 속한 블럭 내에서만 의미를 가지는 Element  …","fields":{"slug":"/css/bem/"},"frontmatter":{"date":"January 04, 2021","title":"[CSS] BEM","category":"css"}}},{"node":{"excerpt":"2018년 8월, Web Frontend 신입 개발자로 현 회사에 입사해 3년차 개발자가 되었지만 회고록은 처음 작성해본다. 어떻게 작성해야 좋은 회고가 될 수 있을지에 대한 고민을 해봤다. 그런데 회고는 결국 지난 날들을 돌아보고 잘 마무리해서 앞으로 더 많이 성장하기 위함이기 때문에 그냥 솔직하게 1년의 일기 같은 회고록을 작성해보기로 했다. 나의 2…","fields":{"slug":"/essay/review-2020/"},"frontmatter":{"date":"January 01, 2021","title":"[Essay] 주니어 프론트엔드 개발자의 2020 회고","category":"essay"}}},{"node":{"excerpt":"브라우저 기본으로 적용되어 있는 스크롤바 디자인을 아래와 같이 변경할 수 있다. SCSS 실행 결과","fields":{"slug":"/css/customize-scroll-bar/"},"frontmatter":{"date":"July 05, 2020","title":"[CSS/SCSS] 스크롤바 디자인 변경하기","category":"css"}}},{"node":{"excerpt":"border-spacing 은 단일값 또는 각각 간격을 조정하는 것이 가능하다.  만약 위 아래에만 20px 간격을 만들 경우 아래와 같이 이 속성을  태그에 사용한다. 실행 결과","fields":{"slug":"/css/border-spacing/"},"frontmatter":{"date":"June 30, 2020","title":"[CSS] table tr 태그 간격 주기","category":"css"}}},{"node":{"excerpt":"1. concat() - 문자열 합치기  매개 변수로 전달된 모든 문자열을 호출 문자열에 붙인 새로운 문자열을 반환한다. 기존 문자열을 변경시키지 않는다. 2. includes() - 문자열에 특정 문자열 포함 여부 확인하기   : 이 문자열에서 검색을 시작할 위치. 기본값은 . 3. split() - 배열로 만들기  문자열을 지정된 구분자로 나눈 후 배…","fields":{"slug":"/JavaScript/string-methods/"},"frontmatter":{"date":"June 07, 2020","title":"[JavaScript] 주요 메소드 정리 - String","category":"javascript"}}},{"node":{"excerpt":"TypeError: Cannot read property of undefined 분명히 데이터가 있는데 undefined 의 속성을 찾을 수 없다고 에러가 발생할 때가 있다. 왜? 분명히 데이터가 있는데?! 왜 undefined 라는 거야? Example 나의 정보를 화면에 보여줄 것이며 나의 정보()의 데이터 구조는 아래와 같다. 이제 아래의 HTML …","fields":{"slug":"/vue/data-undefined-error/"},"frontmatter":{"date":"May 31, 2020","title":"[Vue.js] ❗️TypeError: Cannot read property of undefined","category":"vue"}}},{"node":{"excerpt":"1. concat() - 배열 합치기  인자로 주어진 배열이나 값들을 기존 배열에 합쳐서 새 배열을 반환한다. 기존 배열이나 값을 변경시키지 않는다. 2. push, unshift - 배열에 항목 추가하기  : 배열 끝에 항목 추가  : 배열 앞에 항목 추가 반환 값 : 호출한 배열의 새로운 length 속성 기존 배열을 변경시킨다. 3. pop, shi…","fields":{"slug":"/JavaScript/array-methods/"},"frontmatter":{"date":"May 24, 2020","title":"[JavaScript] 주요 메소드 정리 - Array","category":"javascript"}}},{"node":{"excerpt":"브라우저 주요 기능 사용자가 선택한 자원을 서버에 요청하고 브라우저에 표시하는 것이며 자원은 보통 HTML 문서지만 PDF나 이미지 또는 다른 형태일 수 있다. 브라우저는 HTML과 CSS 명세에 따라 HTML 파일을 해석해서 표시하는데 이 명세는 웹 표준화 기구인 W3C에서 정한다. 브라우저의 주요 구성 요소 사용자 인터페이스 브라우저 엔진 : 사용자 …","fields":{"slug":"/web/browser-rendering/"},"frontmatter":{"date":"May 23, 2020","title":"[WEB] 브라우저 렌더링 원리 알아보기","category":"web"}}},{"node":{"excerpt":"정규표현식(Regular Expression)은 문자열을 처리하는 방법 중의 하나로 특정한 조건의 문자를 ‘검색’하거나 ‘치환’하는 과정을 매우 간편하게 처리 할 수 있도록 하는 수단이다. 정규표현식 사용 방법을 간단하게 알아보자. 위의 예제에서 1행과 같이 정규 표현식을 쓸 수도, 3~4행과 같이 쓸 수도 있다. 변하지 않는 특정 문자열을 찾을 때는 1…","fields":{"slug":"/JavaScript/variable-regex/"},"frontmatter":{"date":"May 21, 2020","title":"[JavaScript] 자바스크립트 변수로 정규식 사용하기","category":"javascript"}}},{"node":{"excerpt":"1. ShortCut 설정 창으로 이동하기  Webstorm - Preferences - Editor - Live Templates - (JavaScript 선택) 우측의 + 버튼 클릭 - Live Templates 클릭 2. 단축어 설정하기  Abbreviation 입력창에 단축어 설정 Description 입력창에 설명 추가 Template text …","fields":{"slug":"/etc./webstorm-shortcut/"},"frontmatter":{"date":"May 21, 2020","title":"[etc.] WebStorm ShortCut 단축어 추가하기","category":"etc."}}},{"node":{"excerpt":"Storage 웹 개발을 하다보면 스토리지가 필요할 때가 있다. 스토리지에 대해 알아보자. HTML5에서 추가된 Storage는  객체의 하위 객체로, 영구 저장인 와 브라우저 탭 별로 유효한 라는 두 가지 저장 방식을 제공한다. cookies vs localStorage vs sessionStorage  cookies localStorage sessio…","fields":{"slug":"/web/storage/"},"frontmatter":{"date":"May 09, 2020","title":"[WEB] cookies, localStorage, sessionStorage 비교","category":"web"}}},{"node":{"excerpt":"CSS 만으로 서서히 나타나고 서서히 사라지는 애니메이션을 구현할 수 있다. 우선, 애니메이션 속성에 대해 알아보자. Animation Animation 속성은 애니메이션에 이름을 지정하거나 지속시간, 속도 조절 등을 지정할 수 있는 속성을 가지고 있다. 애니메이션 속성 종류  : @keyframes 이름 (예제에서는 fadeOut 을 사용)  : 타임 …","fields":{"slug":"/css/fade-in-out/"},"frontmatter":{"date":"May 03, 2020","title":"[CSS] Fade In / Fade Out Animation 추가하기","category":"css"}}},{"node":{"excerpt":"1. Optional Chaining  존재하지 않은 값의 속성에 접근하려 하면 아래와 같이 에러가 발생한다. 따라서  값이 없을 경우를 대비해 아래와 같이 예외 처리 해야만 한다. ECMAScript2020의 Optional Chaining 은 이러한 불편함을 해결해준다.  왼쪽 연산자 값이 이나 일 경우 실행을 멈추고 를 return 하기 때문에 존재…","fields":{"slug":"/JavaScript/ecmascript-2020/"},"frontmatter":{"date":"May 03, 2020","title":"[JavaScript] ECMAScript2020 소개 및 주요 개념","category":"javascript"}}},{"node":{"excerpt":"자바스크립트는 현재 세 가지 종류가 있다. 웹 브라우저에서 동작하는 표준 자바스크립트인 ES5, 2015년부터 매년 새로운 버전을 발표하는 ESNext, 그리고 ESNext에 타입 기능을 추가한 타입스크립트. ESNext는 ES5의 모든 문법을 포함하고, 타입스크립트는 ESNext의 모든 문법을 포함한다. 따라서 타입스크립트로 개발했더라도 타입 기능을 사…","fields":{"slug":"/typescript/welcome-typescript/"},"frontmatter":{"date":"April 11, 2020","title":"[TypeScript] 타입스크립트 소개 및 주요 개념","category":"typescript"}}},{"node":{"excerpt":"클라이언트에서 서버와의 통신이 필요할 때 Ajax나 XML을 이용할 수 있는데, Axios는 Ajax 요청을 하도록 도와주는 라이브러리다. 1. NPM 으로 Axios 설치 2. main.js 에 import 및 설정 3. GET - 서버로 부터 데이터 Read 요청하기 4. POST - 서버로 데이터 Create 요청하기 5. PUT - 서버로 데이터 …","fields":{"slug":"/vue/axios/"},"frontmatter":{"date":"April 01, 2020","title":"[Vue.js] Axios를 이용하여 서버와 통신하기","category":"vue"}}},{"node":{"excerpt":"순수 JavaScript나 jQuery로 DOM에 직접 접근할 수도 있지만, refs를 사용할 수도 있다. 컴포넌트가 mounted될 때, 에 focus를 줘보자.  방법 1. jQuery 아래와 같이 jQuery로 에 focus를 줄 수 있다. HTML JavaScript 방법 2. refs 아래와 같이 refs를 사용하여 에 focus를 줄 수도 있다…","fields":{"slug":"/vue/refs/"},"frontmatter":{"date":"April 01, 2020","title":"[Vue.js] refs로 DOM 직접 접근하기","category":"vue"}}},{"node":{"excerpt":"웹 사이트에서 하나의 vue 파일만으로 하나의 페이지를 만들 수도 있지만, 다른 컴포넌트들을 하위 컴포넌트로 등록하여 만들 수 있다. 그런데, 하위 컴포넌트를 등록하여 만들 때는 데이터 전달이 필요하다. 예를 들어, A라는 페이지에서 팝업을 띄워야할 때 ‘팝업 컴포넌트’를 A 컴포넌트의 하위 컴포넌트로 등록할 수 있는데, A 컴포넌트에서 B 요소를 클릭할…","fields":{"slug":"/vue/component-props/"},"frontmatter":{"date":"March 31, 2020","title":"[vue.js] 하위 컴포넌트 등록과 Props","category":"vue"}}},{"node":{"excerpt":"vue-cli로 프로젝트를 생성하면 src 폴더 안에 components 폴더가 기본으로 존재한다. 이 components 폴더 안에는 여러 페이지에서 공용으로 쓰이는 popup이나 header, footer 같은 컴포넌트들을 모아 놓을 것이다. 이제 src 폴더 안에 pages라는 폴더를 새로 생성하자. 이 pages 폴더 안에는 실제 페이지 단위로 쓰…","fields":{"slug":"/vue/create-component/"},"frontmatter":{"date":"March 30, 2020","title":"[Vue.js] 컴포넌트 생성","category":"vue"}}},{"node":{"excerpt":"vue-cli로 생성한 vue.js 프로젝트의 App.vue 파일의 html 코드 부분을 보면 기본적으로 아래와 같이 작성되어 있다. App.vue 위 코드에서  부분에는 의 라우터 설정에 따라 다른 컴포넌트가 보여지게 된다. 그렇다면 src/router/index.js를 살펴보자. src/router/index.js 기본적으로 가 일 경우에는 Hello…","fields":{"slug":"/vue/router/"},"frontmatter":{"date":"February 10, 2020","title":"[Vue.js] 라우터 설정","category":"vue"}}},{"node":{"excerpt":"프로젝트 구조에는 정답이 없다고 생각하지만, 아래와 같은 구조를 추천한다. Vue.js 프로젝트 추천 구조 build 배포시 관련 설정들이 들어있는 폴더. webpack.config.js : webpack 설정 파일. webpack 빌드를 위해 필요한 로직들을 정의 하는 파일이다. webpack의 핵심 파일이라고 생각하면 된다. 이 파일에는 webpack…","fields":{"slug":"/vue/vue-architecture/"},"frontmatter":{"date":"February 09, 2020","title":"[Vue.js] 프로젝트 추천 구조","category":"vue"}}},{"node":{"excerpt":"Vue.js 프레임워크를 사용한 프로젝트 생성 방법에 대해 알아보고, 추가적으로 함께 설치하면 좋은 라이브러리와 환경 설정에 대해 알아보자. 1. Node.js 설치 https://nodejs.org/ko/ 링크로 접속하여 LTS버전의 Node.js를 설치한다. Vue의 다양한 프로토타이핑 프로젝트를 CLI로 생성하기 위해서는 반드시 Node.js 설치가…","fields":{"slug":"/vue/vue-setting/"},"frontmatter":{"date":"January 19, 2020","title":"[Vue.js] 프로젝트 생성 및 환경 설정","category":"vue"}}},{"node":{"excerpt":"this JavaScript에서의 this는 함수의 현재 실행 문맥이다. 함수 실행에서의 this 함수 실행에서의 this는 전역 객체다. 전역 객체는 실행 환경에 따라 결정되는데, 웹 브라우저에서는 window가 전역 객체다. 아래의 코를 보자. 7행에서  함수를 호출한 결과를 라는 변수에 넣었다.  함수의 매개변수로 와 을 전달했고, 1행의  함수가 …","fields":{"slug":"/JavaScript/this/"},"frontmatter":{"date":"November 30, 2019","title":"[JavaScript] this","category":"javascript"}}},{"node":{"excerpt":"Ajax (Asynchronous JavaScript and XML) Ajax는 자바스크립트를 이용해서 비동기적(Asynchronous)으로 서버와 브라우저가 데이터를 교환할 수 있는 통신 방식을 의미한다. 보통 브라우저에서 웹페이지를 요청하면 서버와 통신하여 화면을 refresh하는데, Ajax를 이용하여, 서버로부터 웹 페이지가 반환될 때 화면 전체를…","fields":{"slug":"/JavaScript/ajax-xml-json/"},"frontmatter":{"date":"November 24, 2019","title":"[JavaScript] Ajax 와 XML / JSON","category":"javascript"}}},{"node":{"excerpt":"JavaScript의 bind는 새로운 바인딩한 함수를 만든다. 바인딩한 함수는 원본 함수 객체를 감싸는 함수이다. call, apply와 비교하며 알아보자. 우선 call과 apply는 함수를 “즉시” 호출하고 컨텍스트를 수정할 때 사용된다. 즉, 그냥 함수가 실행되도록 도와주는 것이다. (더 자세한 설명은 여기에서 확인할 수 있다.) 그러나 bind는…","fields":{"slug":"/JavaScript/bind/"},"frontmatter":{"date":"November 06, 2019","title":"[JavaScript] bind","category":"javascript"}}},{"node":{"excerpt":"JavaScript의 call과 apply는 함수를 호출하는데 사용되는 메소드이다. 더 자세히 알아보기 전에 먼저 함수의 기본적인 호출 방법에 대해 알아보자. 이라는 함수에 매개변수로 두 개의 값을 받고 있으므로 이 함수를 호출할 때 과 같은 방식으로 호출할 수 있다. 이 때 함수의 리턴값은 다. 그렇다면 이제 call과 apply로 함수를 호출하는 방법…","fields":{"slug":"/JavaScript/call-apply/"},"frontmatter":{"date":"November 03, 2019","title":"[JavaScript] 함수의 호출 방법 - call과 apply","category":"javascript"}}},{"node":{"excerpt":"자바스크립트에는 기본적으로 클래스라는 개념이 없기 때문에 상속 기능도 없지만 Prototype을 이용해서 상속 기능을 흉내낼 수는 있다. 객체는 속성을 가질 수 있는데, prototype이라는 속성은 그 용도가 약속되어 있는 특수한 속성이다. prototype에 저장된 속성들은 생성자를 통해서 객체가 만들어질 때 그 객체에 연결된다. 자바스크립트의 모든 …","fields":{"slug":"/JavaScript/prototype/"},"frontmatter":{"date":"October 27, 2019","title":"[JavaScript] 프로토타입(Prototype)","category":"javascript"}}},{"node":{"excerpt":"클로저는 유효범위(Scope)를 기억하는 함수이다. 따라서 내부함수가 외부함수의 지역변수를 기억하여 접근할 수 있다. 외부함수의 실행이 끝나서 외부함수가 소멸된 이후에도 내부함수는 외부함수의 지역변수에 접근할 수 있다. 다시 말해서, 클로저란 내부함수가 외부함수의 지역변수에 접근할 수 있고 외부함수는 외부함수의 지역변수를 사용하는 내부함수가 소멸될 때까지…","fields":{"slug":"/JavaScript/closure/"},"frontmatter":{"date":"October 20, 2019","title":"[JavaScript] 클로저(Closure)","category":"javascript"}}},{"node":{"excerpt":"마크다운(markdown)은 일반 텍스트 문서의 양식을 편집하는 문법이다. README 파일이나 온라인 문서, 혹은 일반 텍스트 편집기로 문서 양식을 편집할 때 쓰인다. 마크다운을 이용해 작성된 문서는 쉽게 HTML 등 다른 문서형태로 변환이 가능하다. 1. 제목 This is a H1 This is a H2 This is a H3 This is a H4…","fields":{"slug":"/etc./markdown-syntax/"},"frontmatter":{"date":"October 09, 2019","title":"[etc.] 마크다운 문법(Markdown Syntax)","category":"etc."}}},{"node":{"excerpt":"크로스 도메인은 쉽게 말해서 서로 다른 도메인 간의 호출이다. 만약 내가 개발한 웹 사이트에서만 사용하기 위해 API 서버를 구축하였는데 다른 웹 서비스에서 이 API 서버에 마음대로 접근하여 API를 호출하여 사용할 수 있다면 문제가 된다. 그래서 JavaScript는 Same Origin Policy(동일 출처 정책)라는 정책을 두어 다른 도메인의 서…","fields":{"slug":"/JavaScript/cross-domain/"},"frontmatter":{"date":"October 06, 2019","title":"[JavaScript] 크로스 도메인(Cross Domain)","category":"javascript"}}},{"node":{"excerpt":"과 는 비슷해 보이지만 엄연히 다르다. 이 두 개의 개념 차이를 명확히 알아두자. undefined 먼저 에 대해 알아보자. 는 변수를 선언만 하고 값을 할당하지 않은 것.\n즉, 자료형이 결정되지 않은 상태이다. 위의 코드를 보면 라는 변수를 선언만하고 값을 할당하지 않았기 때문에 변수 를 출력하면 이 출력되고 변수 의 자료형 역시 결정되지 않은 상태이기…","fields":{"slug":"/JavaScript/null-undefined/"},"frontmatter":{"date":"October 06, 2019","title":"[JavaScript] null과 undefined 비교","category":"javascript"}}},{"node":{"excerpt":"이벤트 위임은 자바스크립트 언어를 사용하는 개발자라면 반드시 알아야 할 개념이다.\n그러나 이벤트 위임에 대해서 알아보기 전에 여기에서 이벤트 버블링과 이벤트 캡쳐링부터 알아보자. 이벤트 위임 하위 요소들 각각에 이벤트를 붙이지 않고 상위 요소에 이벤트를 붙여서 하위 요소들 각각에 이벤트를 붙인 것과 같은 효과를 낸다. 만약 이벤트 위임을 사용하지 않고 하…","fields":{"slug":"/JavaScript/delegation/"},"frontmatter":{"date":"October 05, 2019","title":"[JavaScript] 이벤트 위임","category":"javascript"}}},{"node":{"excerpt":"버블링과 캡쳐링을 본격적으로 알아보기 전에 간단한 코드를 한 번 살펴보자. 태그에 라는 이벤트 핸들러를 할당하였고, 태그에는 어떠한 핸들러도 할당하지 않았다. 그런데 태그를 클릭해도 태그에 할당된 핸들러가 실행이 된다. p 태그를 클릭했는데 왜 div 태그에 할당된 핸들러가 실행이 되는 것일까? 버블링 때문이다. 자바스크립트의 이벤트 버블링 때문에 위의 …","fields":{"slug":"/JavaScript/bubbling-capturing/"},"frontmatter":{"date":"October 05, 2019","title":"[JavaScript] 이벤트 버블링과 이벤트 캡쳐링","category":"javascript"}}},{"node":{"excerpt":"자바스크립트 호이스팅이란? 선언을 현재 스크립트 또는 현재 함수의 맨 위로 이동시키는 JavaScript의 기본 동작이다. 변수가 함수 내에서 정의되었을 경우 : 선언이 함수 내부의 최상위로 Hoisting 됨. 변수가 함수 밖에 정의되었을 경우 : 선언이 전역 컨텍스트의 최상위로 Hoisting 됨. 호이스팅 때문에 변수를 선언하기 전에 사용할 수 있다…","fields":{"slug":"/JavaScript/hoisting/"},"frontmatter":{"date":"September 30, 2019","title":"[JavaScript] 호이스팅(Hoisting)","category":"javascript"}}},{"node":{"excerpt":"자바스크립트에서 클릭 이벤트를 줄 때 어떤 방식을 사용하는가?\n을 사용할 수도, 를 사용할 수도 있지만, 어떤 것을 사용하든 이 두 가지가 서로 어떻게 다른 지 알고 있어야 한다. onclick은 하나만, addEventListener는 여러 개를. 에는 하나의 콜백만 지정할 수 있지만, 를 사용하면 여러 개의 이벤트 리스너를 추가할 수 있다. 따라서 만…","fields":{"slug":"/JavaScript/onclick-vs-addeventlistener/"},"frontmatter":{"date":"September 30, 2019","title":"[JavaScript] onclick과 addEventListener 비교","category":"javascript"}}},{"node":{"excerpt":"다른 회사의 주니어들은 어떻게 일하고 성장하고 있는지 알고 싶어서 참석하게 된 ‘스뽀콘’.\n이 곳에서 들은 내용을 정리하고 공유하고자 한다. 세션 1 2년간 5개 회사 경험기 (정석준님 - 피알앤디컴퍼니 개발자) 이직왕, 프로이직러. 2년 동안 5개 회사를 다녔기 때문에 짧은 기간 내에 면접 경험도 많고 회사 경험이 많다. 좋은 회사 좋은 회사란 어떤 회…","fields":{"slug":"/seminar/2019-startup-junior-seminar/"},"frontmatter":{"date":"September 29, 2019","title":"[Seminar] 2019 스뽀콘 - '스'타트업 '뽀'시래기 '콘'퍼런스 참석 후기","category":"seminar"}}},{"node":{"excerpt":"JavaScript에서 사용하는 변수 선언 키워드 , , 의 차이점에 대해서 알아보고 그 차이점을 알기 위해 필요한 개념인 선언, 할당, Scope에 대해서 알아보자. 그리고 아무런 키워드를 사용하지 않았을 때는 어떻게 되는지 알아보자 var 키워드 없이 변수를 선언하면 전역 변수가 된다. 따라서 전역 유효범위에 속해지기 때문에 코드 내에서 어디서든 변수…","fields":{"slug":"/JavaScript/var-let-const/"},"frontmatter":{"date":"September 22, 2019","title":"[JavaScript] var, let, const 비교","category":"javascript"}}},{"node":{"excerpt":"Notion을 용량 제한 없이 이용하려면 Personal Plan 기준으로 월 $5의 비용이 발생한다.\n그러나 이제 간단한 학교 이메일 주소 인증만으로 Notion을 무료로 이용할 수 있다. Notion에 대한 더 자세한 정보는 Notion 공식 홈페이지에서 확인할 수 있다. Education Plan으로 Notion 무료 이용하기 Notion App 열…","fields":{"slug":"/etc./notion-for-students-&-teachers/"},"frontmatter":{"date":"September 21, 2019","title":"[etc.] Notion is FREE for students & teachers","category":"etc."}}},{"node":{"excerpt":"2018 타입스크립트 밋업 (2018/01/18) 2017년 학부생 때 TypeScript 언어를 사용하여 여러 프로젝트를 진행한 경헝이 있는데 현업에 계신 분들은 TypeScript를 어떻게 사용하고 있는 지 궁금해서 참석하게 된 밋업. 이 곳에서 들은 내용을 정리하고 공유하고자 한다. 세션 1 TypeScript로부터 얻은 것과 잃은 것 (손찬욱님 -…","fields":{"slug":"/seminar/2018-typescript-korea-meetup/"},"frontmatter":{"date":"January 18, 2018","title":"[Seminar] 2018 TypeScript Korea MeetUp","category":"seminar"}}}]}},"pageContext":{}},"staticQueryHashes":["3128451518","342751336"]}